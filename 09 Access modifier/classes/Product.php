<?php 
class Product {

	public $name;
	protected $price;

	//public $discount = 10; //скидка на товар в им 10% 
	// есть вероятность случайно переопределить свойство из вне класса - это нам на фиг не надо. Поэтому предоставлять доступ к скидке таким образом - public $discount = 10; - не правильно. Делаем так:
	private $discount = 0;

	// Скидку не правильно жестко прописывать как свойство класса). Обычно скидка получается динамически и задается где то в админке. Соответственно хранится в бд и мы ее получаем от туда, как правиль используя сеттеры (метод setDiscount например). Сделаем геттер и сеттер для свойства discount внизу на строке 52. Именно через гетторы и сетторы мы получаем доступ к закрытым (private) свойствам.

	/*
	делаем на примере свойств (переменных) класса, по методам (функциям) то же самое.
	*/

	public $public = 'public'; //доступен ото всюду - в тех классах в которых он объявлен, в классах наследниках, также доступен из вне класса, для объекта который мы создаем. (echo $book->public;)

	protected $protected = 'protected'; //защищенный. Данное свойство либо метод будут доступны в том классе в котором они объявлены и в классах наследниках. Из вне класса не доступны. 

	private $private = 'private'; // Закрытый. Данное свойство либо метод будут доступны только в том классе в котором они объявлены. Не доступны в классах наследниках, вне класса.

	public function __construct($name, $price) {

		$this->name = $name;
		$this->price = $price;

		// проверим, видны ли свойтва внутри класса - ответ да, видны
		// var_dump($this->public);
		// var_dump($this->protected);
		// var_dump($this->private);

	}

	public function getName() {
		return $this->name;
	}

	public function getPrice() {
		return $this->price - ($this->discount / 100 * $this->price);
	}

	public function getProduct() {
		return "<hr><b>О товаре:</b><br>
			Наименование: {$this->name}<br>
			Цена со скидкой: {$this->getPrice()}<br>
		";
	}


	//геттер для свойства discount
	public function getDiscount() : int {
		return $this->discount;
	}

	//сеттер для свойства discount
	public function setDiscount(int $discount) {
		$this->discount = $discount;
	}

	/*
	Плюсы геттеров и сеттеров заключаются в том, что мы можем контролировать тип данных. С php 7. ... появилось возможность деклорировать возвращаемого значения. (public function getDiscount() : int) - возвращает int.

	И деклорация устанавливаемого значения public function setDiscount(int $discount) - данный метод ожидает именно integer на вход
	
	Эти методы публичны и они доступны в классах наследниках и установить скидку мы можем, скажем в конструкторе дочернего класса (BookPropuct.php строка 17)

	И посмотреть скидку мы всегда можем через метод getDiscount() (в index.php). Теперь установить скидку из вне класса мы не можем. Можем установить ее только через метод setDiscount() который доступен только в классах наследниках, либо в родительском.
	*/

}